import React, { useState } from "react";
import {
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  TableSortLabel,
  TextField,
  Paper,
} from "@mui/material";

import { Heading } from "@chakra-ui/react";

const VulnerabilityTable = ({ vulnerabilities }) => {
  const [order, setOrder] = useState("asc");
  const [orderBy, setOrderBy] = useState("Severity");
  const [searchText, setSearchText] = useState("");

  const handleRequestSort = (property) => {
    const isAsc = orderBy === property && order === "asc";
    setOrder(isAsc ? "desc" : "asc");
    setOrderBy(property);
  };

  const handleSearchChange = (event) => {
    setSearchText(event.target.value);
  };

  const filteredVulnerabilities = vulnerabilities.filter((vuln) =>
    vuln.Vulnerabilities.some((v) =>
      v.CVE.toLowerCase().includes(searchText.toLowerCase())
    )
  );

  const sortedVulnerabilities = filteredVulnerabilities
    .flatMap((port) =>
      port.Vulnerabilities.map((vuln) => ({
        Port: port.Port,
        Protocol: port.Protocol,
        Service: port.Service,
        ServiceVersion: port.ServiceVersion,
        ...vuln,
      }))
    )
    .sort((a, b) => {
      if (orderBy === "Severity") {
        return order === "asc"
          ? a.Severity - b.Severity
          : b.Severity - a.Severity;
      }
      return 0;
    });

  return (
    <>
      <Heading sx={{ color: "#062c30" }} mb={4}>
        Network Vulnerability Interactive Table
      </Heading>
      <Paper>
        <TextField
          label="Search Vulnerabilities"
          variant="outlined"
          onChange={handleSearchChange}
          style={{ margin: 16 }}
        />
        <TableContainer>
          <Table>
            <TableHead>
              <TableRow>
                <TableCell>Port</TableCell>
                <TableCell>Protocol</TableCell>
                <TableCell>Service</TableCell>
                <TableCell>Service Version</TableCell>
                <TableCell>
                  <TableSortLabel
                    active={orderBy === "Severity"}
                    direction={orderBy === "Severity" ? order : "asc"}
                    onClick={() => handleRequestSort("Severity")}
                  >
                    Severity
                  </TableSortLabel>
                </TableCell>
                <TableCell>CVE</TableCell>
                <TableCell>Details</TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              {sortedVulnerabilities.map((vuln, index) => (
                <TableRow key={`${vuln.CVE}-${index}`}>
                  <TableCell>{vuln.Port}</TableCell>
                  <TableCell>{vuln.Protocol}</TableCell>
                  <TableCell>{vuln.Service}</TableCell>
                  <TableCell>{vuln.ServiceVersion}</TableCell>
                  <TableCell>{vuln.Severity}</TableCell>
                  <TableCell>
                    <a
                      href={vuln.URL}
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      {vuln.CVE}
                    </a>
                  </TableCell>
                  <TableCell>
                    <a
                      href={vuln.URL}
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      View Details
                    </a>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </TableContainer>
      </Paper>
    </>
  );
};

export default VulnerabilityTable;
